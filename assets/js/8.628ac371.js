(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{208:function(t,s,a){"use strict";a.r(s);var e=a(0),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue-qa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-qa"}},[t._v("#")]),t._v(" VUE QA")]),t._v(" "),a("h2",{attrs:{id:"_1-v-show与v-if的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-v-show与v-if的区别"}},[t._v("#")]),t._v(" 1.v-show与v-if的区别")]),t._v(" "),a("p",[t._v("v-if  创建、删除（没有元素）")]),t._v(" "),a("p",[t._v("v-show 显示隐藏（有元素）")]),t._v(" "),a("p",[t._v("v-if 是真正的条件渲染，因为它会确保在切换过程中条件快内的事件监听器和子组件适当的被销毁和重建。")]),t._v(" "),a("p",[t._v("v-if 也是惰性的 如果在初始渲染时条件为假，则什么也不做一直到条件第一次变为真时，才会开始渲染条件块。")]),t._v(" "),a("p",[t._v("相比之下，v-show 不管初始条件是什么，元素总是会被渲染，并且只是简单的基于CSS进行切换。")]),t._v(" "),a("p",[t._v("一般情况下 v-if 有更高的切换开销，而v-show有更高的渲染开销，因此如果需要频繁地切换，则使用v-show较好，如果在运行时条件不太可能改变，则使用v-if较好。")]),t._v(" "),a("h2",{attrs:{id:"_2-vue-css样式局部化-stylus-scss-less-如何样式穿透"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-vue-css样式局部化-stylus-scss-less-如何样式穿透"}},[t._v("#")]),t._v(" 2.VUE CSS样式局部化 stylus scss less 如何样式穿透")]),t._v(" "),a("h3",{attrs:{id:"css只在当前组件生效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css只在当前组件生效"}},[t._v("#")]),t._v(" CSS只在当前组件生效")]),t._v(" "),a("p",[t._v("<style scoped>")]),t._v(" "),a("h3",{attrs:{id:"scss-styles-less"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scss-styles-less"}},[t._v("#")]),t._v(" scss styles less")]),t._v(" "),a("p",[t._v("scss: 依赖：npm install sass-loader node-sass --save")]),t._v(" "),a("p",[t._v("<style lang='sass' scoped>")]),t._v(" "),a("p",[t._v("scss 样式穿透")]),t._v(" "),a("p",[t._v("父元素 /deep/ 子元素")]),t._v(" "),a("p",[t._v("父元素 >>> 子元素")]),t._v(" "),a("h2",{attrs:{id:"_3-v-model是什么-v-bind区别-vue中标签怎么绑定事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-v-model是什么-v-bind区别-vue中标签怎么绑定事件"}},[t._v("#")]),t._v(" 3.v-model是什么 v-bind区别  vue中标签怎么绑定事件")]),t._v(" "),a("h3",{attrs:{id:"v-model的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-model的使用"}},[t._v("#")]),t._v(" v-model的使用")]),t._v(" "),a("p",[t._v("​\t可以实现双向绑定，在input或者select或者文本域配合value使用")]),t._v(" "),a("h3",{attrs:{id:"vue事件绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue事件绑定"}},[t._v("#")]),t._v(" vue事件绑定")]),t._v(" "),a("p",[t._v("​\tv-on:click   简写 @click")]),t._v(" "),a("p",[t._v("​\t移动端click有300ms延迟问题，解决这个方案可以引入 fastClick")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("1. npm install fastclick\n2. import FastClick form 'fastclick'\n3. FastClick.attach(document.body)\n")])])]),a("h3",{attrs:{id:"v-model-v-bind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-model-v-bind"}},[t._v("#")]),t._v(" v-model v-bind")]),t._v(" "),a("p",[t._v("1.v-bind用来绑定数据和属性以及表达式，缩写为'：'")]),t._v(" "),a("p",[t._v("2.v-model使用在表单中，实现双向数据绑定的，在表单元素外使用不起作用")]),t._v(" "),a("h2",{attrs:{id:"_4-vue-loader-是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-vue-loader-是什么"}},[t._v("#")]),t._v(" 4.vue-loader 是什么")]),t._v(" "),a("p",[t._v("npm run build")]),t._v(" "),a("p",[t._v("loader ： 加载器")]),t._v(" "),a("p",[t._v("用途：js可以写es6、style样式可以写less和scss、template")]),t._v(" "),a("h2",{attrs:{id:"_5-nexttick是做什么的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-nexttick是做什么的"}},[t._v("#")]),t._v(" 5.NextTick是做什么的")]),t._v(" "),a("p",[t._v("$nextTick 是在下次DOM更新循环结束之后执行延迟回调，在修改数据之后使用$nextTick，则可以在回调中获取更新后的DOM。")]),t._v(" "),a("p",[t._v("使用场景：需要在视图更新之后，基于新的视图进行操作")]),t._v(" "),a("p",[t._v("swiper 轮播图 全部更新完成后 再进行加载")]),t._v(" "),a("h2",{attrs:{id:"_6-vue组件data为什么必须是函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-vue组件data为什么必须是函数"}},[t._v("#")]),t._v(" 6.Vue组件data为什么必须是函数")]),t._v(" "),a("p",[t._v("[涉及 js原型链  引用类型]")]),t._v(" "),a("p",[t._v("因为JS本身的特性带来的，如果data是一个对象，那么由于对象本身属于引用类型，当我们修改其中一个属性时，会影响到所有Vue实例的数据。如果将data作为一个函数返回一个对象，那么每一个实例的data属性都是独立的，不会互相影响。")]),t._v(" "),a("h2",{attrs:{id:"_7-对-kaap-alive了解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-对-kaap-alive了解"}},[t._v("#")]),t._v(" 7.对 Kaap-alive了解")]),t._v(" "),a("p",[t._v("1.kaap-alive是什么")]),t._v(" "),a("p",[t._v("​\t内置组件，能在组件切换工程中将状态保留在内存中，防止重复渲染dom。")]),t._v(" "),a("p",[t._v("2.说明")]),t._v(" "),a("p",[t._v("​\tkeep-alive 它不会在dom树中渲染")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("使用场景和渲染有关")])]),t._v(" "),a("h2",{attrs:{id:"_8-vue中key的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-vue中key的作用"}},[t._v("#")]),t._v(" 8.VUE中key的作用")]),t._v(" "),a("p",[t._v("总结：key的作用主要是为了高效的更新虚拟dom")]),t._v(" "),a("p",[t._v("没有加key，diff默认算法的问题(虚拟dom)")]),t._v(" "),a("p",[t._v("​\t1.如果节点类型不同，直接干掉前面所有的节点，再创建并插入新的节点，不会再比较这个节点以后的子节点。")]),t._v(" "),a("p",[t._v("​\t2.如果节点类型相同，则会重新设置节点的属性，从而实现节点的更新。")]),t._v(" "),a("h2",{attrs:{id:"_9-vue的双向数据绑定原理是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-vue的双向数据绑定原理是什么"}},[t._v("#")]),t._v(" 9.Vue的双向数据绑定原理是什么")]),t._v(" "),a("p",[t._v("vue.js 是采用数据劫持结合发布-订阅者模式的方式，通过Object.defineProperty()来劫持各个属性的setter，getter，在数据变动时发布消息给订阅者，触发响应的监听回调。")]),t._v(" "),a("h2",{attrs:{id:"_10-在vue中使用插件的步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-在vue中使用插件的步骤"}},[t._v("#")]),t._v(" 10.在Vue中使用插件的步骤")]),t._v(" "),a("p",[t._v("1.下载 npm install xxx")]),t._v(" "),a("p",[t._v("2.引入(根据api文档引入)，use")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),t._v("\ncomponents"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//---全局引入")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),t._v("\nVue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("3.根据api在组件中使用和配置")]),t._v(" "),a("h2",{attrs:{id:"_11-watch-和-computed-差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-watch-和-computed-差异"}},[t._v("#")]),t._v(" 11.watch 和 computed 差异")]),t._v(" "),a("p",[t._v("在模板内反转数组会造成 顺序错误")]),t._v(" "),a("p",[t._v("computed: 计算属性")]),t._v(" "),a("p",[t._v("​\t1.计算属性是由data中的已知值，得到一个新的值")]),t._v(" "),a("p",[t._v("​\t2.性能不好")]),t._v(" "),a("p",[t._v("​\t3.别人变化影响自己")]),t._v(" "),a("p",[t._v("watch： 监听数据的变化")]),t._v(" "),a("p",[t._v("​\t可以监控路由")]),t._v(" "),a("p",[t._v("​\t1.监听data中的数据")]),t._v(" "),a("p",[t._v("​\t2.我的变化影响别人")]),t._v(" "),a("p",[t._v("​\t3.可获取变化前变化后的值")]),t._v(" "),a("p",[t._v("watch是进行数据监听，然后进行相应的操作，执行方法等conputed和methods的合体使用，比较耗性能，与VUE性能优化相背而驰，尽量减少使用，computed是数据改变进行相应的数据变化，由老数据进发新的数据（return返回），会利用缓存机制对数据进行缓存，只有当 依赖数据变化的时候才会进行相应的变化。")]),t._v(" "),a("h2",{attrs:{id:"_12-vue项目打包后js、css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-vue项目打包后js、css"}},[t._v("#")]),t._v(" 12.Vue项目打包后js、css")]),t._v(" "),a("p",[t._v("一个html 使用路由懒加载打包出 多个css js 提高加载速度")]),t._v(" "),a("h2",{attrs:{id:"_13-vue组件之间传值通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-vue组件之间传值通信"}},[t._v("#")]),t._v(" 13. Vue组件之间传值通信")]),t._v(" "),a("p",[t._v("1.父组件 传 子组件")]),t._v(" "),a("p",[t._v("​\t父组件：")]),t._v(" "),a("p",[t._v("​\t<Header :msg='msg'>  </Header>")]),t._v(" "),a("p",[t._v("​\t子组件：")]),t._v(" "),a("p",[t._v("​\tprops: ['msg']")]),t._v(" "),a("p",[t._v("​\t// --------或者")]),t._v(" "),a("p",[t._v("​\tprops:{")]),t._v(" "),a("p",[t._v("​\t\tmsg:数据类型")]),t._v(" "),a("p",[t._v("​\t}")]),t._v(" "),a("p",[t._v("2.子组件 传 父组件")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("子组件：\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$emit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"自定义事件名称"')]),t._v("，要传的数据"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n父组件：\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Header @childInput"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"getVal"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\\"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Header"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\nmethods"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("msg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// msg 子组件传递的值")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("3.兄弟组件之间的传值")]),t._v(" "),a("p",[t._v("通过一个中转（bus）")]),t._v(" "),a("p",[t._v("A兄弟传值：")]),t._v(" "),a("p",[t._v("​\timport bus form '@/common/bus'")]),t._v(" "),a("p",[t._v('​\tbus.$emit("toFooter",this.msg);')]),t._v(" "),a("p",[t._v("B兄弟接收：")]),t._v(" "),a("p",[t._v("​\timport bus form '@/common/bus'")]),t._v(" "),a("p",[t._v("​\tbus.$on('toFooter',(data)=>{")]),t._v(" "),a("p",[t._v("​\t\t// data是this.msg数据")]),t._v(" "),a("p",[t._v("​\t})")]),t._v(" "),a("h2",{attrs:{id:"_14-vue-cli项目中-src-目录中每个文件夹和文件的用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-vue-cli项目中-src-目录中每个文件夹和文件的用法"}},[t._v("#")]),t._v(" 14.vue_cli项目中 src 目录中每个文件夹和文件的用法")]),t._v(" "),a("p",[t._v("assets \t\t静态资源 图片 js css")]),t._v(" "),a("p",[t._v("components  非路由组件")]),t._v(" "),a("p",[t._v("views\t\t 路由组件")]),t._v(" "),a("p",[t._v("router\t\t 路由配置")]),t._v(" "),a("p",[t._v("store\t\t vuex仓库")]),t._v(" "),a("p",[t._v("App.vue\t\t 挂载的第一个组件")]),t._v(" "),a("p",[t._v("main.js \t\t全局的文件")]),t._v(" "),a("h2",{attrs:{id:"_15-axios是什么，怎么使用，描述使用它实现登录的流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-axios是什么，怎么使用，描述使用它实现登录的流程"}},[t._v("#")]),t._v(" 15.axios是什么，怎么使用，描述使用它实现登录的流程")]),t._v(" "),a("p",[t._v("1.下载 npm install axios --save")]),t._v(" "),a("p",[t._v("2.引入 import axios from 'axios'")]),t._v(" "),a("p",[t._v("​\tvue.prototype.axios = axios;")]),t._v(" "),a("p",[t._v('​\tthis.axios.get("/login",login).then((res)=>{console.log(res)})')]),t._v(" "),a("h2",{attrs:{id:"_16-vue跨域请求接口代理方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-vue跨域请求接口代理方式"}},[t._v("#")]),t._v(" 16.Vue跨域请求接口代理方式")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//vue-cli3.0 里面的 vue.config.js做配置")]),t._v("\ndevServer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里最好有一个 /")]),t._v("\n            target"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://45.105.124.130:8081'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 后台接口域名")]),t._v("\n            ws"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果要代理 websockets，配置这个参数")]),t._v("\n            secure"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果是https接口，需要配置这个参数")]),t._v("\n            changeOrigin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//是否跨域")]),t._v("\n            pathRewrite"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^/rng'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_17-vue页面的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-vue页面的生命周期"}},[t._v("#")]),t._v(" 17.Vue页面的生命周期")])])}),[],!1,null,null,null);s.default=v.exports}}]);